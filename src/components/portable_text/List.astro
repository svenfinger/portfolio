---
import IconArrow from '../../assets/icons/arrow-up-right.svg'

interface List {
  _type: string;
  label: string;
  valueType: 'text' | 'link';
  textValue?: string;
  linkValue?: {
    text?: string;
    url: string;
    openInNewTab: boolean;
  };
}

const { node } = Astro.props;
const items = node.items || [];
---

<ul class="divide-y divide-gray-200 dark:divide-gray-800 space-y-6">
  {items.map((item: List) => (
    <li class="pb-6 grid grid-cols-2">
      <span>{item.label}</span>
      {item.valueType === 'text' && (
        <span>{item.textValue}</span>
      )}
      {item.valueType === 'link' && item.linkValue && (
        <>
          {item.linkValue.url.startsWith('mailto:') ? (
            <a
              href={item.linkValue.url}
              target={item.linkValue.openInNewTab ? "_blank" : undefined}
              rel={item.linkValue.openInNewTab ? "noopener noreferrer" : undefined}
              class="hover:underline"
            >
              {item.linkValue.text || item.linkValue.url.substring(7)}
            </a>
          ) : (
            <a
              href={item.linkValue.url}
              target={item.linkValue.openInNewTab ? "_blank" : undefined}
              rel={item.linkValue.openInNewTab ? "noopener noreferrer" : undefined}
              class="flex gap-2 items-center hover:underline"
            >
              {item.linkValue.text || item.linkValue.url}

              {item.linkValue.openInNewTab && (
                <IconArrow class="size-3.5 text-gray-500" />
              )}
            </a>
          )}
        </>
      )}
    </li>
  ))}
</ul>
