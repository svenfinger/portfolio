---
import { urlFor } from '../../lib/sanityImage';
import Media from '../Media.astro';

const { node } = Astro.props;
const image = node.image;
const video = node.video;

const isImage = !!image;
const isVideo = !!video;
const videoUrl = isVideo ? `https://cdn.sanity.io/files/${import.meta.env.SANITY_STUDIO_PROJECT_ID}/${import.meta.env.SANITY_STUDIO_DATASET}/${video.asset._ref.replace('file-', '').replace(/-/g, '.').replace('.mp4.', '.mp4')}` : null;
---
<section class="pb-48">
  <Media>
    {isImage && (
      <img
        src={urlFor(image).width(800).format('webp').url()}
        srcset={`
          ${urlFor(image).width(800).format('webp').url()} 800w,
          ${urlFor(image).width(1600).format('webp').url()} 1600w,
          ${urlFor(image).width(2784).format('webp').url()} 2784w
        `}
        sizes="(max-width: 1440px) 100vw, 1392px"
        alt={image.alt || ''}
        loading="lazy"
        decoding="async"
        slot="media"
        class="w-full h-auto"
      />
    )}
    {isVideo && (
      <video
        src={videoUrl}
        playsinline
        muted
        autoplay
        loop
        slot="media"
        class="w-full h-auto"
      />
    )}
  </Media>
  <div class="grid sm:grid-cols-2 pt-6 sm:gap-6">
    <div></div>
    <p>{node.text}</p>
  </div>
</section>
